/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public enum DECODER_OPTION {
  DECODER_OPTION_DATAFORMAT(0),
  DECODER_OPTION_END_OF_STREAM,
  DECODER_OPTION_VCL_NAL,
  DECODER_OPTION_TEMPORAL_ID,
  DECODER_OPTION_FRAME_NUM,
  DECODER_OPTION_IDR_PIC_ID,
  DECODER_OPTION_LTR_MARKING_FLAG,
  DECODER_OPTION_LTR_MARKED_FRAME_NUM,
  DECODER_OPTION_ERROR_CON_IDC,
  DECODER_OPTION_TRACE_LEVEL,
  DECODER_OPTION_TRACE_CALLBACK,
  DECODER_OPTION_TRACE_CALLBACK_CONTEXT;

  public final int swigValue() {
    return swigValue;
  }

  public static DECODER_OPTION swigToEnum(int swigValue) {
    DECODER_OPTION[] swigValues = DECODER_OPTION.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (DECODER_OPTION swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + DECODER_OPTION.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private DECODER_OPTION() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private DECODER_OPTION(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private DECODER_OPTION(DECODER_OPTION swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

