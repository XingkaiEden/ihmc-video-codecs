/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.code.libyuv;

public class MJpegDecoder {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected MJpegDecoder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MJpegDecoder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libyuvJNI.delete_MJpegDecoder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static int getKColorSpaceUnknown() {
    return libyuvJNI.MJpegDecoder_kColorSpaceUnknown_get();
  }

  public static int getKColorSpaceGrayscale() {
    return libyuvJNI.MJpegDecoder_kColorSpaceGrayscale_get();
  }

  public static int getKColorSpaceRgb() {
    return libyuvJNI.MJpegDecoder_kColorSpaceRgb_get();
  }

  public static int getKColorSpaceYCbCr() {
    return libyuvJNI.MJpegDecoder_kColorSpaceYCbCr_get();
  }

  public static int getKColorSpaceCMYK() {
    return libyuvJNI.MJpegDecoder_kColorSpaceCMYK_get();
  }

  public static int getKColorSpaceYCCK() {
    return libyuvJNI.MJpegDecoder_kColorSpaceYCCK_get();
  }

  public MJpegDecoder() {
    this(libyuvJNI.new_MJpegDecoder(), true);
  }

  public int LoadFrame(java.nio.ByteBuffer src, long src_len) {
  assert src.isDirect() : "Buffer must be allocated direct.";
    {
      return libyuvJNI.MJpegDecoder_LoadFrame(swigCPtr, this, src, src_len);
    }
  }

  public int GetWidth() {
    return libyuvJNI.MJpegDecoder_GetWidth(swigCPtr, this);
  }

  public int GetHeight() {
    return libyuvJNI.MJpegDecoder_GetHeight(swigCPtr, this);
  }

  public int GetColorSpace() {
    return libyuvJNI.MJpegDecoder_GetColorSpace(swigCPtr, this);
  }

  public int GetNumComponents() {
    return libyuvJNI.MJpegDecoder_GetNumComponents(swigCPtr, this);
  }

  public int GetHorizSampFactor(int component) {
    return libyuvJNI.MJpegDecoder_GetHorizSampFactor(swigCPtr, this, component);
  }

  public int GetVertSampFactor(int component) {
    return libyuvJNI.MJpegDecoder_GetVertSampFactor(swigCPtr, this, component);
  }

  public int GetHorizSubSampFactor(int component) {
    return libyuvJNI.MJpegDecoder_GetHorizSubSampFactor(swigCPtr, this, component);
  }

  public int GetVertSubSampFactor(int component) {
    return libyuvJNI.MJpegDecoder_GetVertSubSampFactor(swigCPtr, this, component);
  }

  public int GetImageScanlinesPerImcuRow() {
    return libyuvJNI.MJpegDecoder_GetImageScanlinesPerImcuRow(swigCPtr, this);
  }

  public int GetComponentScanlinesPerImcuRow(int component) {
    return libyuvJNI.MJpegDecoder_GetComponentScanlinesPerImcuRow(swigCPtr, this, component);
  }

  public int GetComponentWidth(int component) {
    return libyuvJNI.MJpegDecoder_GetComponentWidth(swigCPtr, this, component);
  }

  public int GetComponentHeight(int component) {
    return libyuvJNI.MJpegDecoder_GetComponentHeight(swigCPtr, this, component);
  }

  public int GetComponentStride(int component) {
    return libyuvJNI.MJpegDecoder_GetComponentStride(swigCPtr, this, component);
  }

  public int GetComponentSize(int component) {
    return libyuvJNI.MJpegDecoder_GetComponentSize(swigCPtr, this, component);
  }

  public int UnloadFrame() {
    return libyuvJNI.MJpegDecoder_UnloadFrame(swigCPtr, this);
  }

  public int Decode(java.nio.ByteBuffer Y, java.nio.ByteBuffer U, java.nio.ByteBuffer V) {
  assert Y.isDirect() : "Buffer must be allocated direct.";
  assert U.isDirect() : "Buffer must be allocated direct.";
  assert V.isDirect() : "Buffer must be allocated direct.";
    {
      return libyuvJNI.MJpegDecoder_Decode(swigCPtr, this, Y, U, V);
    }
  }

}
