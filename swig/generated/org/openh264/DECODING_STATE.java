/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openh264;

public enum DECODING_STATE {
  dsErrorFree(0x00),
  dsFramePending(0x01),
  dsRefLost(0x02),
  dsBitstreamError(0x04),
  dsDepLayerLost(0x08),
  dsNoParamSets(0x10),
  dsDataErrorConcealed(0x20),
  dsInvalidArgument(0x1000),
  dsInitialOptExpected(0x2000),
  dsOutOfMemory(0x4000),
  dsDstBufNeedExpand(0x8000);

  public final int swigValue() {
    return swigValue;
  }

  public static DECODING_STATE swigToEnum(int swigValue) {
    DECODING_STATE[] swigValues = DECODING_STATE.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (DECODING_STATE swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + DECODING_STATE.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private DECODING_STATE() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private DECODING_STATE(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private DECODING_STATE(DECODING_STATE swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

