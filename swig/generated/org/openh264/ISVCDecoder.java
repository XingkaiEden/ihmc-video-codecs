/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openh264;

public class ISVCDecoder {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ISVCDecoder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ISVCDecoder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        codec_apiJNI.delete_ISVCDecoder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int Initialize(SDecodingParam pParam) {
    return codec_apiJNI.ISVCDecoder_Initialize(swigCPtr, this, SDecodingParam.getCPtr(pParam), pParam);
  }

  public int Uninitialize() {
    return codec_apiJNI.ISVCDecoder_Uninitialize(swigCPtr, this);
  }

  public STargetPicture DecodeFrame(java.nio.ByteBuffer pSrc, int iSrcLen) {
  assert pSrc.isDirect() : "Buffer must be allocated direct.";
    {
      long cPtr = codec_apiJNI.ISVCDecoder_DecodeFrame(swigCPtr, this, pSrc, iSrcLen);
      return (cPtr == 0) ? null : new STargetPicture(cPtr, true);
    }
  }

  public SBufferInfoExt DecodeFrame2(java.nio.ByteBuffer pSrc, int iSrcLen) {
  assert pSrc.isDirect() : "Buffer must be allocated direct.";
    {
      long cPtr = codec_apiJNI.ISVCDecoder_DecodeFrame2(swigCPtr, this, pSrc, iSrcLen);
      return (cPtr == 0) ? null : new SBufferInfoExt(cPtr, true);
    }
  }

  public int SetOption(DECODER_OPTION eOptionId, int option) {
    return codec_apiJNI.ISVCDecoder_SetOption__SWIG_0(swigCPtr, this, eOptionId.swigValue(), option);
  }

  public int SetOption(DECODER_OPTION eOptionId, boolean option) {
    return codec_apiJNI.ISVCDecoder_SetOption__SWIG_1(swigCPtr, this, eOptionId.swigValue(), option);
  }

  public int GetIntOption(DECODER_OPTION eOptionId) {
    return codec_apiJNI.ISVCDecoder_GetIntOption(swigCPtr, this, eOptionId.swigValue());
  }

  public boolean GetBoolOption(DECODER_OPTION eOptionId) {
    return codec_apiJNI.ISVCDecoder_GetBoolOption(swigCPtr, this, eOptionId.swigValue());
  }

}
