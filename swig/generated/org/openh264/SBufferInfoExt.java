/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openh264;

public class SBufferInfoExt {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SBufferInfoExt(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBufferInfoExt obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        codec_apiJNI.delete_SBufferInfoExt(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DECODING_STATE getState() {
    return DECODING_STATE.swigToEnum(codec_apiJNI.SBufferInfoExt_state_get(swigCPtr, this));
  }

  public java.nio.ByteBuffer getPpDst() {  
  return codec_apiJNI.SBufferInfoExt_ppDst_get(swigCPtr, this);  
}

  public SBufferInfo getInfo() {
    long cPtr = codec_apiJNI.SBufferInfoExt_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SBufferInfo(cPtr, false);
  }

  public void getPpDst(java.nio.ByteBuffer ppDst) {
  assert ppDst.isDirect() : "Buffer must be allocated direct.";
    {
      codec_apiJNI.SBufferInfoExt_getPpDst(swigCPtr, this, ppDst);
    }
  }

  public SBufferInfoExt() {
    this(codec_apiJNI.new_SBufferInfoExt(), true);
  }

}
