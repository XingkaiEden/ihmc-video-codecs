/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openh264;

public class SEncParamBase {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SEncParamBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SEncParamBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OpenH264JNI.delete_SEncParamBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setIUsageType(EUsageType value) {
    OpenH264JNI.SEncParamBase_iUsageType_set(swigCPtr, this, value.swigValue());
  }

  public EUsageType getIUsageType() {
    return EUsageType.swigToEnum(OpenH264JNI.SEncParamBase_iUsageType_get(swigCPtr, this));
  }

  public void setIInputCsp(int value) {
    OpenH264JNI.SEncParamBase_iInputCsp_set(swigCPtr, this, value);
  }

  public int getIInputCsp() {
    return OpenH264JNI.SEncParamBase_iInputCsp_get(swigCPtr, this);
  }

  public void setIPicWidth(int value) {
    OpenH264JNI.SEncParamBase_iPicWidth_set(swigCPtr, this, value);
  }

  public int getIPicWidth() {
    return OpenH264JNI.SEncParamBase_iPicWidth_get(swigCPtr, this);
  }

  public void setIPicHeight(int value) {
    OpenH264JNI.SEncParamBase_iPicHeight_set(swigCPtr, this, value);
  }

  public int getIPicHeight() {
    return OpenH264JNI.SEncParamBase_iPicHeight_get(swigCPtr, this);
  }

  public void setITargetBitrate(int value) {
    OpenH264JNI.SEncParamBase_iTargetBitrate_set(swigCPtr, this, value);
  }

  public int getITargetBitrate() {
    return OpenH264JNI.SEncParamBase_iTargetBitrate_get(swigCPtr, this);
  }

  public void setIRCMode(RC_MODES value) {
    OpenH264JNI.SEncParamBase_iRCMode_set(swigCPtr, this, value.swigValue());
  }

  public RC_MODES getIRCMode() {
    return RC_MODES.swigToEnum(OpenH264JNI.SEncParamBase_iRCMode_get(swigCPtr, this));
  }

  public void setFMaxFrameRate(float value) {
    OpenH264JNI.SEncParamBase_fMaxFrameRate_set(swigCPtr, this, value);
  }

  public float getFMaxFrameRate() {
    return OpenH264JNI.SEncParamBase_fMaxFrameRate_get(swigCPtr, this);
  }

  public SEncParamBase() {
    this(OpenH264JNI.new_SEncParamBase(), true);
  }

}
