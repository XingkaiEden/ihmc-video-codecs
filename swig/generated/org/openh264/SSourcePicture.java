/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openh264;

public class SSourcePicture {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SSourcePicture(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SSourcePicture obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OpenH264JNI.delete_SSourcePicture(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setIColorFormat(int value) {
    OpenH264JNI.SSourcePicture_iColorFormat_set(swigCPtr, this, value);
  }

  public int getIColorFormat() {
    return OpenH264JNI.SSourcePicture_iColorFormat_get(swigCPtr, this);
  }

  public void setIStride(int[] value) {
    OpenH264JNI.SSourcePicture_iStride_set(swigCPtr, this, value);
  }

  public int[] getIStride() {
    return OpenH264JNI.SSourcePicture_iStride_get(swigCPtr, this);
  }

  public void setIPicWidth(int value) {
    OpenH264JNI.SSourcePicture_iPicWidth_set(swigCPtr, this, value);
  }

  public int getIPicWidth() {
    return OpenH264JNI.SSourcePicture_iPicWidth_get(swigCPtr, this);
  }

  public void setIPicHeight(int value) {
    OpenH264JNI.SSourcePicture_iPicHeight_set(swigCPtr, this, value);
  }

  public int getIPicHeight() {
    return OpenH264JNI.SSourcePicture_iPicHeight_get(swigCPtr, this);
  }

  public void setUiTimeStamp(long value) {
    OpenH264JNI.SSourcePicture_uiTimeStamp_set(swigCPtr, this, value);
  }

  public long getUiTimeStamp() {
    return OpenH264JNI.SSourcePicture_uiTimeStamp_get(swigCPtr, this);
  }

  public void setPData(int plane, java.nio.ByteBuffer data) {
  assert data.isDirect() : "Buffer must be allocated direct.";
    {
      OpenH264JNI.SSourcePicture_setPData(swigCPtr, this, plane, data);
    }
  }

  public SSourcePicture() {
    this(OpenH264JNI.new_SSourcePicture(), true);
  }

}
